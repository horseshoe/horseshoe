plugins {
	id 'checkstyle'
	id 'java-library'
	id 'jacoco'
	id 'org.sonarqube' version '2.8'
}

repositories {
	jcenter()
}

checkstyle {
	toolVersion = 'latest.release'
}

java {
	sourceCompatibility = JavaVersion.VERSION_1_7
	targetCompatibility = JavaVersion.VERSION_1_7
}

test {
	finalizedBy jacocoTestReport
}

dependencies {
	testImplementation 'junit:junit:4.+'
	testImplementation 'com.github.stefanbirkner:system-rules:1.+'
	testImplementation 'org.yaml:snakeyaml:1.+'
}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

compileTestJava {
	sourceCompatibility = 1.8
	targetCompatibility = 1.8
}

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = 'sources'
	from sourceSets.main.allSource
}

javadoc {
	include '**/horseshoe/*.java'
	title = 'Horseshoe'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from javadoc.destinationDir
}

artifacts {
	archives sourcesJar
	archives javadocJar
}

jacocoTestReport {
	reports {
		xml.enabled true
		html.enabled true
	}
}

def getVersion = { ->
	def stdout = new ByteArrayOutputStream()
	def result = exec {
		commandLine 'git', 'describe', '--tags', '--match', 'v[0-9]*'
		standardOutput = stdout
		ignoreExitValue true
	}
	if (result.getExitValue() != 0) {
		return 'unspecified'
	}
	return stdout.toString().trim().substring(1)
}

group = 'oss.horseshoe'
version = getVersion()

jar {
	manifest {
		attributes 'Implementation-Title': project.name,
			'Implementation-Version': project.version,
			'Main-Class': 'horseshoe.Runner'
	}
}

tasks.withType(Jar) {
	from('LICENSE') {
		into 'META-INF'
	}
}